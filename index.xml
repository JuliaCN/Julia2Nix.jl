<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Julia2Nix.jl</title>
    <link>https://JuliaCN.github.io/Julia2Nix.jl/</link>
    <description>Recent content on Julia2Nix.jl</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language><atom:link href="https://JuliaCN.github.io/Julia2Nix.jl/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>API</title>
      <link>https://JuliaCN.github.io/Julia2Nix.jl/posts/api/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://JuliaCN.github.io/Julia2Nix.jl/posts/api/</guid>
      <description> tags Library Working with a project To build the Manifest.toml of packages in the project run:
nix build .\#packages.x86_64-linux.build-package </description>
    </item>
    
    <item>
      <title>Build</title>
      <link>https://JuliaCN.github.io/Julia2Nix.jl/posts/build/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://JuliaCN.github.io/Julia2Nix.jl/posts/build/</guid>
      <description>Julia Wrapped julia-wrapped wraps the libraries and JULIA_DEPOT_PATH, which can be loaded easily in a sandbox environment.</description>
    </item>
    
    <item>
      <title>Enable Option</title>
      <link>https://JuliaCN.github.io/Julia2Nix.jl/posts/enable/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://JuliaCN.github.io/Julia2Nix.jl/posts/enable/</guid>
      <description>Example Adding realted featrues into lib.julia-wrapped
julia-wrapped { enable = { GR = true; python = inputs.nixpkgs.legacyPackages.${system}.python3.buildEnv.override { extraLibs = with inputs.nixpkgs.legacyPackages.${system}.python3Packages; [xlrd matplotlib pyqt5]; ignoreCollisions = true; }; }; } Third part support DONE GR Python [1/1] DONE PyCall The PyCall needs PyCall to make the compiling passing.</description>
    </item>
    
    <item>
      <title>Flake</title>
      <link>https://JuliaCN.github.io/Julia2Nix.jl/posts/flake/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://JuliaCN.github.io/Julia2Nix.jl/posts/flake/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Graph</title>
      <link>https://JuliaCN.github.io/Julia2Nix.jl/posts/graph/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://JuliaCN.github.io/Julia2Nix.jl/posts/graph/</guid>
      <description>GraphML </description>
    </item>
    
    <item>
      <title>Introduction</title>
      <link>https://JuliaCN.github.io/Julia2Nix.jl/posts/intro/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://JuliaCN.github.io/Julia2Nix.jl/posts/intro/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Julia Wrapped</title>
      <link>https://JuliaCN.github.io/Julia2Nix.jl/posts/julia-wrapped/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://JuliaCN.github.io/Julia2Nix.jl/posts/julia-wrapped/</guid>
      <description> tags Library Vaules name type julia2nix.lib.${system}.julia-wrapped {} Example Setting Here is the minimal configuration with additional Enable Option.
julia-wrapped = self.lib.${system}.julia-wrapped { package = self.packages.${system}.julia_17-bin; enable = { GR = true; python = inputs.nixpkgs.legacyPackages.${system}.python3.buildEnv.override { extraLibs = with inputs.nixpkgs.legacyPackages.${system}.python3Packages; [xlrd matplotlib pyqt5]; ignoreCollisions = true; }; }; }; </description>
    </item>
    
    <item>
      <title>Library</title>
      <link>https://JuliaCN.github.io/Julia2Nix.jl/posts/library/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://JuliaCN.github.io/Julia2Nix.jl/posts/library/</guid>
      <description> Link: https://github.com/JuliaCN/Julia2Nix.jl/blob/main/nix/julia2nix/library/default.nix julia-wrapped </description>
    </item>
    
    <item>
      <title>Overrides</title>
      <link>https://JuliaCN.github.io/Julia2Nix.jl/posts/overrides/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://JuliaCN.github.io/Julia2Nix.jl/posts/overrides/</guid>
      <description> issue: https://github.com/JuliaCN/Julia2Nix.jl/issues/10 DevShell dev </description>
    </item>
    
    <item>
      <title>Packages</title>
      <link>https://JuliaCN.github.io/Julia2Nix.jl/posts/packages/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://JuliaCN.github.io/Julia2Nix.jl/posts/packages/</guid>
      <description> link: https://github.com/JuliaCN/Julia2Nix.jl/blob/main/nix/julia2nix/packages/default.nix </description>
    </item>
    
    <item>
      <title>Patches</title>
      <link>https://JuliaCN.github.io/Julia2Nix.jl/posts/patches/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://JuliaCN.github.io/Julia2Nix.jl/posts/patches/</guid>
      <description>Patched Packages [2/2] DONE PyCall DONE Conda </description>
    </item>
    
    <item>
      <title>Usage</title>
      <link>https://JuliaCN.github.io/Julia2Nix.jl/posts/usage/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://JuliaCN.github.io/Julia2Nix.jl/posts/usage/</guid>
      <description> tags Packages, API, Library JuNix JuNix provides an interface to call the nix-fetch from within Julia.
Flakes Templates </description>
    </item>
    
  </channel>
</rss>
